name: Test Build (Branch)

on:
  push:
    branches:
      - test-aarch64-linux-target
  pull_request:
    branches:
      - test-aarch64-linux-target

jobs:
  test_build:
    name: Test NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        nif: ["2.15"]
        job:
          - {
              target: aarch64-unknown-linux-gnu,
              os: ubuntu-latest,
              use-cross: true,
            }

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Extract crate information
        shell: bash
        run: |
          # Get the project version from mix.exs
          echo "PROJECT_VERSION=$(sed -n 's/^  @version "\(.*\)"/\1/p' mix.exs | head -n1)" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.job.target }}

      - name: Build the project
        id: build-crate
        uses: philss/rustler-precompiled-action@v1.0.1
        with:
          nif-version: ${{ matrix.nif }}
          project-dir: "native/baml_elixir"
          project-name: baml_elixir
          project-version: ${{ env.PROJECT_VERSION }}
          target: ${{ matrix.job.target }}
          use-cross: ${{ matrix.job.use-cross }}

      - name: Verify build artifact
        run: |
          echo "Build completed successfully for target: ${{ matrix.job.target }}"
          echo "Artifact path: ${{ steps.build-crate.outputs.file-path }}"
          echo "File name: ${{ steps.build-crate.outputs.file-name }}"
          ls -la "${{ steps.build-crate.outputs.file-path }}"
